<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompanyTitleNameMD" xml:space="preserve">
    <value>明德</value>
  </data>
  <data name="CompanyTitleNameMT" xml:space="preserve">
    <value>明泰</value>
  </data>
  <data name="CompanyTitleNameMX" xml:space="preserve">
    <value>明翔</value>
  </data>
  <data name="CompanyTitleNameMY" xml:space="preserve">
    <value>明揚</value>
  </data>
  <data name="ERPSyetemWord" xml:space="preserve">
    <value>ERP系統</value>
  </data>
  <data name="ERPSyetemWord2" xml:space="preserve">
    <value>新ERP系統</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>錯誤.</value>
  </data>
  <data name="FileCopy1" xml:space="preserve">
    <value>複製檔案... {0:0%}</value>
  </data>
  <data name="FileCopy2" xml:space="preserve">
    <value>複製完成。</value>
  </data>
  <data name="FileFinish" xml:space="preserve">
    <value>完成。</value>
  </data>
  <data name="FileFinishError" xml:space="preserve">
    <value>檔案被占用。</value>
  </data>
  <data name="FileProcess1" xml:space="preserve">
    <value>複製檔案... {0:0%}</value>
  </data>
  <data name="FileProcess2" xml:space="preserve">
    <value>正在複製 {0}...</value>
  </data>
  <data name="FileUpdate1" xml:space="preserve">
    <value>更新。準備複製檔案....</value>
  </data>
  <data name="FileUpdate2" xml:space="preserve">
    <value>複製檔案中...</value>
  </data>
  <data name="InfoTitle1" xml:space="preserve">
    <value>正在更新安裝</value>
  </data>
  <data name="InfoTitle2" xml:space="preserve">
    <value>獲取更新檔案</value>
  </data>
  <data name="lblDescription" xml:space="preserve">
    <value>檢查設置。</value>
  </data>
  <data name="lblTitle" xml:space="preserve">
    <value>ERP安裝工具</value>
  </data>
  <data name="UpdateProcess1" xml:space="preserve">
    <value>解壓中  {0}%</value>
  </data>
  <data name="UpdateProcess2" xml:space="preserve">
    <value>解壓中.....{0}%</value>
  </data>
  <data name="UpdateStep1" xml:space="preserve">
    <value>下載安裝必要檔案...</value>
  </data>
  <data name="UpdateStep2" xml:space="preserve">
    <value>解壓縮...</value>
  </data>
  <data name="UpdateStep3" xml:space="preserve">
    <value>清理安裝位置，安裝到C:</value>
  </data>
  <data name="UpdateStep4" xml:space="preserve">
    <value>安裝工具已經更新，一秒后開始。</value>
  </data>
  <data name="UpdateStep5" xml:space="preserve">
    <value>下載安裝檔案。</value>
  </data>
  <data name="UpdateStep6" xml:space="preserve">
    <value>正在下載.....{0}%</value>
  </data>
  <data name="UpdateStep6Finish" xml:space="preserve">
    <value>下載完成</value>
  </data>
  <data name="UpdateStep7_1" xml:space="preserve">
    <value>解壓</value>
  </data>
  <data name="UpdateStep7_2" xml:space="preserve">
    <value>正在解壓。</value>
  </data>
  <data name="UpdateSystem1" xml:space="preserve">
    <value>開始安裝。</value>
  </data>
  <data name="UpdateSystem2" xml:space="preserve">
    <value>等5秒后開啓。</value>
  </data>
  <data name="UpdateSystem3" xml:space="preserve">
    <value>檢查本機網路。</value>
  </data>
  <data name="UpdateSystem4" xml:space="preserve">
    <value>,遠端伺服器：{0}</value>
  </data>
  <data name="UpdateStep3_1" xml:space="preserve">
    <value>創建C:\MYERP-NT資料夾</value>
  </data>
  <data name="UpdateStep3_2" xml:space="preserve">
    <value>創建安裝檔....</value>
  </data>
  <data name="UpdateStep3_3" xml:space="preserve">
    <value>創建多語言設定檔{0}...</value>
  </data>
  <data name="StopProcess" xml:space="preserve">
    <value>關閉所有打開的ERP程式</value>
  </data>
  <data name="CreateShortcut" xml:space="preserve">
    <value>建立桌面捷徑...</value>
  </data>
  <data name="Reopen" xml:space="preserve">
    <value>系統重開,稍候...</value>
  </data>
</root>